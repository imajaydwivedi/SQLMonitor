{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Monitor Server Using Live PerfMon Metrics",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 25,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 134,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "description": "exec dbo.sp_WhatIsRunning ",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": true
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "wait_type"
                },
                "properties": [
                  {
                    "id": "links",
                    "value": [
                      {
                        "targetBlank": true,
                        "title": "",
                        "url": "https://www.sqlskills.com/help/waits/${__value.raw}"
                      }
                    ]
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 392
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 196
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 1
          },
          "id": 132,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500) = '$database';\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\n\nset @database = case when ltrim(rtrim(@database)) = '__All__' then null else @database end;\n\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,'$session_id');\nexec dbo.sp_WhatIsRunning \n                  @program_name = @program_name, \n                  @login_name = @login_name,\n                  @database_name = @database,\n                  @session_id = @session_id,\n                  @session_host_name = @session_host_name,\n                  @query_pattern = @query_pattern;\n\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "What's Running - FILTERED - [sp_WhatIsRunning] ",
          "type": "table"
        }
      ],
      "repeat": "datasource",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "What's Running - Custom Query - [$fqdn] - [$ip]",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 145,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "description": "Blocking Details____In Selected Time Duration____Since____${__from:date:YYYY-MM-DD HH.mm}___till___${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}____",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "BLOCKING_TREE"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 308
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 143,
          "options": {
            "footer": {
              "countRows": false,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": [
              {
                "desc": false,
                "displayName": "collection_time"
              }
            ]
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\n\nset @sql_instance = '$server';\nset @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\n-- Get Blocking Tree\nif exists (select * from dbo.WhoIsActive where (collection_time between DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc) and DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)) and (blocking_session_id is not null or replace(blocked_session_count,',','') > 0) )\nbegin\n\t;WITH T_BLOCKERS AS\n\t(\n\t\t-- Find block Leaders\n\tSELECT\t[duration_s] = datediff(second, start_time, collection_time),\n\t\t\t\t[collection_time], [session_id], \n\t\t\t\t[sql_text] = REPLACE(REPLACE(REPLACE(REPLACE(CAST(COALESCE([sql_command],[sql_text]) AS VARCHAR(MAX)),char(13),''),CHAR(10),''),'<?query --',''),'--?>',''), \n\t\t\t\tcommand = additional_info.value('(/additional_info/command_type)[1]','varchar(125)'), [login_name], wait_info, [blocking_session_id], [blocked_session_count] = replace(blocked_session_count,',',''),\n\t\t\t\t[status], open_tran_count, [host_name], [database_name], [program_name], tasks, granted_memory,\n\t\t\t\tr.CPU, r.used_memory, r.[tempdb_allocations], r.[tempdb_current], r.[reads], r.[writes], r.[physical_io],\n\t\t\t\t[LEVEL] = CAST (REPLICATE ('0', 4-LEN (CAST (r.session_id AS VARCHAR))) + CAST (r.session_id AS VARCHAR) AS VARCHAR (1000))\n\t\t\t\t,[head_blocker] = session_id\n\t\tFROM\tdbo.WhoIsActive AS r with (nolock)\n\t\tWHERE\t (collection_time between DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc) and DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc))\n\t\tand (r.blocking_session_id IS NULL AND replace(blocked_session_count,',','') > 0)\n\t\t--\t\n\t\tUNION ALL\n\t\t--\n\t\tSELECT\t[duration_s] = datediff(SECOND, r.start_time, r.collection_time),\n\t\t\t\tr.[collection_time], r.[session_id], \n\t\t\t\t[sql_text] = REPLACE(REPLACE(REPLACE(REPLACE(CAST(COALESCE(r.[sql_command],r.[sql_text]) AS VARCHAR(MAX)),char(13),''),CHAR(10),''),'<?query --',''),'--?>',''), \n\t\t\t\tcommand = r.additional_info.value('(/additional_info/command_type)[1]','varchar(125)'), r.[login_name], r.wait_info, r.[blocking_session_id], [blocked_session_count] = replace(r.blocked_session_count,',',''),\n\t\t\t\tr.[status], r.open_tran_count, r.[host_name], r.[database_name], r.[program_name], r.tasks, r.granted_memory,\n\t\t\t\tr.CPU, r.used_memory, r.[tempdb_allocations], r.[tempdb_current], r.[reads], r.[writes], r.[physical_io],\n\t\t\t\tCAST (B.LEVEL + RIGHT (CAST ((1000 + r.session_id) AS VARCHAR (100)), 4) AS VARCHAR (1000)) AS LEVEL\n\t\t\t\t,[head_blocker] = case when B.[head_blocker] is null then B.session_id else B.[head_blocker] end\n\t\tFROM\tdbo.WhoIsActive AS r with (nolock)\n\t\tINNER JOIN \n\t\t\t\tT_BLOCKERS AS B\n\t\t\tON\tr.collection_time = B.collection_time\n\t\t\tAND\tr.blocking_session_id = B.session_id\n\t\tWHERE\t r.blocking_session_id <> r.session_id\n\t)\n\tSELECT\t[collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), \n\t\t\t [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n\t\t\t[session_id], \n\t\t\t[BLOCKING_TREE] = N'    ' + REPLICATE (N'|         ', LEN (LEVEL)/4 - 1) \n\t\t\t\t\t\t\t+\tCASE\tWHEN (LEN(LEVEL)/4 - 1) = 0\n\t\t\t\t\t\t\t\t\t\tTHEN 'HEAD -  '\n\t\t\t\t\t\t\t\t\t\tELSE '|------  ' \n\t\t\t\t\t\t\t\tEND\n\t\t\t\t\t\t\t+\tCAST (r.session_id AS NVARCHAR (10)) + N' ' + ISNULL((CASE WHEN LEFT(ISNULL(r.[sql_text],''),1) = '(' THEN SUBSTRING(ISNULL(r.[sql_text],''),CHARINDEX('exec',ISNULL(r.[sql_text],'')),LEN(ISNULL(r.[sql_text],'')))  ELSE ISNULL(r.[sql_text],'') END),''),\n\t\t\t[blocking_session_id], [blocked_session_count] = case when [blocked_session_count] = 0 then null else [blocked_session_count] end, [login_name], [program_name], [host_name],\n\t\t\ttasks,\n\t\t\t--[sql_commad] = CONVERT(XML, '<?query -- '+char(13)\n\t\t\t--\t\t\t\t+ (CASE WHEN LEFT([sql_text],1) = '(' THEN SUBSTRING([sql_text],CHARINDEX('exec',[sql_text]),LEN([sql_text]))  ELSE [sql_text] END)\n\t\t\t--\t\t\t\t+ char(13)+'--?>')\n\t\t\tcommand, [database_name], wait_info, status, \n\t\t\tr.open_tran_count, r.CPU, [used_memory_kb] = (r.used_memory*8.0), [reads_kb] = (r.[reads]*8.0), r.[writes] --, r.[physical_io]\n\t\t\t,[tempdb_allocations_kb] = tempdb_allocations*8.0, tempdb_current_kb = tempdb_current*8.0, granted_memory_kb = granted_memory * 8.0\n\tFROM\tT_BLOCKERS AS r\n\tORDER BY collection_time, LEVEL;\nend\nelse\n  select 'No Blocking Found for Time Window' as [No Result]\n\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name, @start_time_utc, @end_time_utc;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name, @start_time_utc, @end_time_utc;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Blocking Details________From____${__from:date:YYYY-MM-DD HH.mm}___to___${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}____",
          "type": "table"
        }
      ],
      "title": "Blocking Tree (Queries)________From____${__from:date:YYYY-MM-DD HH.mm}___to___${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}____",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 136,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "session_id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 105
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 140,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500) = '$database';\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\ndeclare @duration int;\ndeclare @memory_grant_threshold_mb int = $memory_grant_threshold_mb;\n\nset @database = case when ltrim(rtrim(@database)) = '__All__' then null else @database end;\nset @duration = case when ltrim(rtrim('$duration')) <> '' then $duration else 0 end;\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,'$session_id');\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500),\n\t\t\t\t@duration int, @memory_grant_threshold_mb int';\n\nset quoted_identifier off;\nset @sql = \"/* SQLMonitor Dashboard $__dashboard: LongRunningQueries  */\nset nocount on;\t\t\t\nif exists ( select * from $whoisactive_table_name w with (nolock)\n            where w.collection_time = (select max(i.collection_time) from $whoisactive_table_name i with (nolock)) \n            and granted_memory >= (@memory_grant_threshold_mb*1024/8) )\nbegin\n  ;with t_WhoIsActive as (\n    select [collection_time] = convert(varchar,w.collection_time,120), w.session_id, \n        w.program_name, w.login_name, w.database_name, w.host_name,\n        w.status, w.CPU, w.used_memory, w.open_tran_count, [duration_s] = datediff(SECOND, start_time, w.collection_time),\n        w.wait_info, granted_memory, tempdb_current,\n        sql_command = case when w.sql_command is not null then left(replace(replace(convert(nvarchar(max),w.sql_command),char(13)+char(10),''),'<?query --',''),150)\n                  else left(replace(replace(convert(nvarchar(max),w.sql_text),char(13)+char(10),''),'<?query --',''),150) end, \n        w.blocked_session_count, w.blocking_session_id, w.reads, w.writes, w.tempdb_allocations, \n        w.tasks, w.percent_complete, start_time = convert(varchar,w.start_time,120)\n    from $whoisactive_table_name w with (nolock)\n    where w.collection_time = (select max(i.collection_time) from dbo.WhoIsActive i with (nolock))\n    and granted_memory >= (@memory_grant_threshold_mb*1024/8)\n  )\n  select [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\n  from t_WhoIsActive w\n  order by granted_memory desc, used_memory desc, collection_time\nend\nELSE\n  select 'No long running query found for time window' as [No Result]\n\"\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration, @memory_grant_threshold_mb;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration, @memory_grant_threshold_mb;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Memory Consumers Over __ $memory_grant_threshold_mb MB__ \"- WhoIsActive Data   @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
          "type": "table"
        }
      ],
      "title": "M/r Consumers - ACTIVE - [sp_WhoIsActive] @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 88,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "wait_info"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 264
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "session_id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 100
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 86,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500) = '$database';\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\n\nset @database = case when ltrim(rtrim(@database)) = '__All__' then null else @database end;\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,'$session_id');\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500)';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\t\n\n;with cte_sessions as (\n  select [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), w.collection_time), w.session_id, \n  \t\tw.program_name, w.login_name, w.database_name, w.host_name, granted_memory, tempdb_current,\n  \t\tw.status, w.CPU, w.used_memory, w.open_tran_count, command = additional_info.value('(/additional_info/command_type)[1]','varchar(125)'),\n  \t\tw.wait_info, [duration_s] = datediff(SECOND, start_time, w.collection_time),\n  \t\tsql_command = case when w.sql_command is not null then left(replace(replace(convert(nvarchar(max),w.sql_command),char(13)+char(10),''),'<?query --',''),150)\n  \t\t\t\t\t\t\telse left(replace(replace(convert(nvarchar(max),w.sql_text),char(13)+char(10),''),'<?query --',''),150) end, \n  \t\tw.blocked_session_count, \n  \t\tw.blocking_session_id, w.reads, w.writes, w.tempdb_allocations, \n  \t\tw.tasks, w.percent_complete, start_time = convert(varchar,w.start_time,120)\n  from $whoisactive_table_name w with (nolock)\n  where w.collection_time = (select top 1 i.collection_time from $whoisactive_table_name i with (nolock)order by i.collection_time desc)\n)\nselect [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\t\nfrom cte_sessions w\nwhere 1 = 1\"\n\nif @program_name is not null\n\tset @sql = @sql + @crlf + \"and w.program_name like ('%'+@program_name+'%')\"\nif @database is not null\n\tset @sql = @sql + @crlf + \"and w.database_name like ('%'+@database+'%')\"\nif @login_name is not null\n\tset @sql = @sql + @crlf + \"and w.login_name like ('%'+@login_name+'%')\"\nif @session_host_name is not null\n\tset @sql = @sql + @crlf + \"and w.host_name like ('%'+@session_host_name+'%')\"\nif @query_pattern is not null\n\tset @sql = @sql + @crlf + \"and w.sql_command like ('%'+@query_pattern+'%')\"\nif @session_id is not null\n\tset @sql = @sql + @crlf + \"and w.session_id = @session_id\"\nset @sql = @sql + @crlf + \"order by w.collection_time DESC, w.start_time ASC\";\n\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, @query_pattern;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, @query_pattern;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "WhoIsActive Data - Latest Captured - FILTERED - @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
          "type": "table"
        }
      ],
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "What's Running - [sp_WhoIsActive]  @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 127,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 125,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500);\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\n\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$database'))) > 0\n  set @database = '$database'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,'$session_id');\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500)';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\n\t\t\n;with t_sessions as (\n\tselect command = additional_info.value('(/additional_info/command_type)[1]','varchar(125)'), \n\t\t\t\t[duration_s] = datediff(SECOND, start_time, w.collection_time), *\n\tfrom $whoisactive_table_name w with (nolock)\n\twhere w.collection_time = (select top 1 i.collection_time from $whoisactive_table_name i with (nolock) order by i.collection_time desc)\n)\nselect  [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\t\t\t    \nfrom t_sessions w\nwhere (\tw.command in ('DBCC', 'RESTORE HEADERONLY','BACKUP LOG','BACKUP DATABASE','RESTORE DATABASE','UPDATE STATISTICS') )\norder by w.collection_time DESC, w.start_time ASC\n\"\n/*\nif @program_name is not null\n\tset @sql = @sql + @crlf + \"and w.program_name like ('%'+@program_name+'%')\"\nif @database is not null\n\tset @sql = @sql + @crlf + \"and w.database_name like ('%'+@database+'%')\"\nif @login_name is not null\n\tset @sql = @sql + @crlf + \"and w.login_name like ('%'+@login_name+'%')\"\nif @session_host_name is not null\n\tset @sql = @sql + @crlf + \"and w.host_name like ('%'+@session_host_name+'%')\"\nif @query_pattern is not null\n\tset @sql = @sql + @crlf + \"and w.sql_command like ('%'+@query_pattern+'%')\"\nif @session_id is not null\n\tset @sql = @sql + @crlf + \"and w.session_id = @session_id\"\nset @sql = @sql + @crlf + \"order by w.collection_time DESC, w.start_time ASC\";\n*/\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, @query_pattern;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, @query_pattern;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "DBA Maintenance - Workload - @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
          "type": "table"
        }
      ],
      "repeat": "datasource",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "What's Running - [sp_WhoIsActive] - DBA Maintenance - Workload  @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 130,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "session_id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 103
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 128,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500);\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\n\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$database'))) > 0\n  set @database = '$database'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,'$session_id');\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500)';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\t\t\t\n;with t_sessions as (\n\tselect command = additional_info.value('(/additional_info/command_type)[1]','varchar(125)'), \n\t\t\t\t[duration_s] = datediff(SECOND, start_time, w.collection_time), *\n\tfrom $whoisactive_table_name w with (nolock)\n\twhere w.collection_time = (select top 1 i.collection_time from $whoisactive_table_name i with (nolock) order by i.collection_time desc)\n)\nselect  [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\t\t\t    \nfrom t_sessions w\nwhere ( w.program_name like 'SQL Job%' or w.program_name like 'SQLAgent%' )\norder by w.collection_time DESC, w.start_time ASC\n\"\n\n/*\nif @program_name is not null\n\tset @sql = @sql + @crlf + \"and w.program_name like ('%'+@program_name+'%')\"\nif @database is not null\n\tset @sql = @sql + @crlf + \"and w.database_name like ('%'+@database+'%')\"\nif @login_name is not null\n\tset @sql = @sql + @crlf + \"and w.login_name like ('%'+@login_name+'%')\"\nif @session_host_name is not null\n\tset @sql = @sql + @crlf + \"and w.host_name like ('%'+@session_host_name+'%')\"\nif @query_pattern is not null\n\tset @sql = @sql + @crlf + \"and w.sql_command like ('%'+@query_pattern+'%')\"\nif @session_id is not null\n\tset @sql = @sql + @crlf + \"and w.session_id = @session_id\"\nset @sql = @sql + @crlf + \"order by w.collection_time DESC, w.start_time ASC\";\n*/\n\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, @query_pattern;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, @query_pattern;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "SQL Server Agent Jobs - @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
          "type": "table"
        }
      ],
      "repeat": "datasource",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "What's Running - [sp_WhoIsActive] - SQL Server Agent Jobs @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 117,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "session_id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 105
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 11,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 137,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500) = '$database';\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\ndeclare @duration int;\n\nset @database = case when ltrim(rtrim(@database)) = '__All__' then null else @database end;\nset @duration = case when ltrim(rtrim('$duration')) <> '' then $duration else 0 end;\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,'$session_id');\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500),\n\t\t\t\t@duration int';\n\nset quoted_identifier off;\nset @sql = \"/* SQLMonitor Dashboard $__dashboard: LongRunningQueries  */\nset nocount on;\t\t\t\nif exists ( select * from $whoisactive_table_name w with (nolock)\n            where w.collection_time = (select max(i.collection_time) from $whoisactive_table_name i with (nolock)) \n            and datediff(minute,start_time,collection_time) >= @duration )\nbegin\n  ;with t_WhoIsActive as (\n    select [collection_time] = convert(varchar,w.collection_time,120), w.session_id, \n        w.program_name, w.login_name, w.database_name, w.host_name,\n        w.status, w.CPU, w.used_memory, w.open_tran_count, [duration_s] = datediff(SECOND, start_time, w.collection_time),\n        w.wait_info, granted_memory, tempdb_current,\n        sql_command = case when w.sql_command is not null then left(replace(replace(convert(nvarchar(max),w.sql_command),char(13)+char(10),''),'<?query --',''),150)\n                  else left(replace(replace(convert(nvarchar(max),w.sql_text),char(13)+char(10),''),'<?query --',''),150) end, \n        w.blocked_session_count, w.blocking_session_id, w.reads, w.writes, w.tempdb_allocations, \n        w.tasks, w.percent_complete, start_time = convert(varchar,w.start_time,120)\n    from $whoisactive_table_name w with (nolock)\n    where w.collection_time = (select max(i.collection_time) from dbo.WhoIsActive i with (nolock))\n    and datediff(minute,start_time,collection_time) >= @duration\n    \"+(case when @program_name is null then '-- ' else '' end)+\"and w.program_name like ('%'+@program_name+'%')\n    \"+(case when @database is null then '-- ' else '' end)+\"and w.database_name like ('%'+@database+'%')\n    \"+(case when @login_name is null then '-- ' else '' end)+\"and w.login_name like ('%'+@login_name+'%')\n    \"+(case when @session_host_name is null then '-- ' else '' end)+\"and w.host_name like ('%'+@session_host_name+'%')\n    \"+(case when @query_pattern is null then '-- ' else '' end)+\"and w.sql_command like ('%'+@query_pattern+'%')\n    \"+(case when @session_id is null then '-- ' else '' end)+\"and w.session_id like ('%'+@session_id+'%')\n  )\n  select [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\n  from t_WhoIsActive w\n  order by w.collection_time DESC, w.start_time ASC\nend\nELSE\n  select 'No long running query found for time window' as [No Result]\n\"\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Long Running Queries - WhoIsActive Data - FILTERED @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
          "type": "table"
        }
      ],
      "repeat": "datasource",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "Long Running Queries - [sp_WhoIsActive] @ ${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 124,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 166
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "session_id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 109
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 122,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500) = '$database';\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\ndeclare @duration int;\ndeclare @memory_grant_threshold_mb int = $memory_grant_threshold_mb;\ndeclare @page_no int;\ndeclare @page_size int;\n\nset @database = case when ltrim(rtrim(@database)) = '__All__' then null else @database end;\nset @duration = case when ltrim(rtrim('$duration')) <> '' then $duration else 0 end;\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,ltrim(rtrim('$session_id')));\nif len(ltrim(rtrim('$page_no'))) > 0 and (case when '$page_no' like '%[^0-9.]%' then 'invalid' when '$page_no' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @page_no = convert(int,ltrim(rtrim('$page_no')));\nif len(ltrim(rtrim('$page_size'))) > 0 and (case when '$page_size' like '%[^0-9.]%' then 'invalid' when '$page_size' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @page_size = convert(int,ltrim(rtrim('$page_size')));\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500),\n\t\t\t\t@duration int, @memory_grant_threshold_mb int, @page_no int, @page_size int';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\n\n;with cte_sessions as (\n  select [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), w.collection_time), w.session_id, \n  \t\tw.program_name, w.login_name, w.database_name, w.host_name, w.granted_memory, w.tempdb_current,\n  \t\tw.status, w.CPU, w.used_memory, w.open_tran_count, [duration_s] = datediff(SECOND, start_time, w.collection_time),\n  \t\tsql_command = case when w.sql_command is not null then left(replace(replace(convert(nvarchar(max),w.sql_command),char(13)+char(10),''),'<?query --',''),150)\n  \t\t\t\t\t\t\telse left(replace(replace(convert(nvarchar(max),w.sql_text),char(13)+char(10),''),'<?query --',''),150) end, \n  \t\tw.blocked_session_count, w.wait_info, w.blocking_session_id, w.reads, w.writes, w.tempdb_allocations,\n  \t\tw.tasks, w.percent_complete, start_time = convert(varchar,w.start_time,120)\n  from $whoisactive_table_name w with (nolock)\n  where w.collection_time between DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc) and DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  --and datediff(minute,start_time,collection_time) >= @duration\n\tand granted_memory >= (@memory_grant_threshold_mb*1024/8)\n\torder by w.collection_time\n\toffset ((@page_no-1)*@page_size) rows fetch next @page_size rows only\n)\nselect [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\nfrom cte_sessions w\nwhere 1 = 1\n\"\n\nif @program_name is not null\n\tset @sql = @sql + @crlf + \"and w.program_name like ('%'+@program_name+'%')\"\nif @database is not null\n\tset @sql = @sql + @crlf + \"and w.database_name like ('%'+@database+'%')\"\nif @login_name is not null\n\tset @sql = @sql + @crlf + \"and w.login_name like ('%'+@login_name+'%')\"\nif @session_host_name is not null\n\tset @sql = @sql + @crlf + \"and w.host_name like ('%'+@session_host_name+'%')\"\nif @query_pattern is not null\n\tset @sql = @sql + @crlf + \"and w.sql_command like ('%'+@query_pattern+'%')\"\nif @session_id is not null\n\tset @sql = @sql + @crlf + \"and w.session_id = @session_id\"\nset @sql = @sql + @crlf + \"order by w.collection_time DESC, w.start_time ASC\";\n\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration, @memory_grant_threshold_mb, @page_no, @page_size;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration, @memory_grant_threshold_mb, @page_no, @page_size;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "WhoIsactive - FILTERED - [Memory Consumers] - Over __ $memory_grant_threshold_mb MB__ -  PAGINATED - Between ___${__from:date:YYYY-MM-DD HH.mm}___&___${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}___",
          "type": "table"
        }
      ],
      "repeat": "datasource",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "M/r Consumers - [sp_WhoIsActive] - For Duration - Paginated - Page No {$page_no} - Page Size {$page_size}",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 139,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "custom": {
                "align": "auto",
                "cellOptions": {
                  "type": "auto"
                },
                "filterable": true,
                "inspect": false
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            },
            "overrides": [
              {
                "matcher": {
                  "id": "byName",
                  "options": "sql_command"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 352
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "program_name"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 169
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "collection_time"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 166
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "session_id"
                },
                "properties": [
                  {
                    "id": "custom.width",
                    "value": 109
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "CPU"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "ms"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "granted_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "granted_memory"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "reads_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "reads"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "writes"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "short"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_allocations_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_allocations"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "tempdb_current_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "tempdb_current"
                  }
                ]
              },
              {
                "matcher": {
                  "id": "byName",
                  "options": "used_memory_kb"
                },
                "properties": [
                  {
                    "id": "unit",
                    "value": "kbytes"
                  },
                  {
                    "id": "displayName",
                    "value": "used_memory"
                  }
                ]
              }
            ]
          },
          "gridPos": {
            "h": 12,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 141,
          "options": {
            "footer": {
              "countRows": false,
              "enablePagination": true,
              "fields": "",
              "reducer": [
                "sum"
              ],
              "show": false
            },
            "showHeader": true,
            "sortBy": []
          },
          "pluginVersion": "9.4.7",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "mssql",
                "uid": "${sqlmonitor_datasource}"
              },
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\n--declare @delta_minutes int;\ndeclare @program_name nvarchar(500);\ndeclare @login_name nvarchar(255);\ndeclare @database nvarchar(500) = '$database';\ndeclare @session_id int;\ndeclare @session_host_name nvarchar(125);\ndeclare @query_pattern nvarchar(500);\ndeclare @duration int;\ndeclare @page_no int;\ndeclare @page_size int;\n\nset @database = case when ltrim(rtrim(@database)) = '__All__' then null else @database end;\nset @duration = case when ltrim(rtrim('$duration')) <> '' then $duration else 0 end;\nif len(ltrim(rtrim('$program_name'))) > 0\n  set @program_name = '$program_name'\nif len(ltrim(rtrim('$login_name'))) > 0\n  set @login_name = '$login_name'\nif len(ltrim(rtrim('$session_host_name'))) > 0\n  set @session_host_name = '$session_host_name'\nif len(ltrim(rtrim('$query_pattern'))) > 0\n  set @query_pattern = '$query_pattern'\nif len(ltrim(rtrim('$session_id'))) > 0 and (case when '$session_id' like '%[^0-9.]%' then 'invalid' when '$session_id' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @session_id = convert(int,ltrim(rtrim('$session_id')));\nif len(ltrim(rtrim('$page_no'))) > 0 and (case when '$page_no' like '%[^0-9.]%' then 'invalid' when '$page_no' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @page_no = convert(int,ltrim(rtrim('$page_no')));\nif len(ltrim(rtrim('$page_size'))) > 0 and (case when '$page_size' like '%[^0-9.]%' then 'invalid' when '$page_size' like '%.%.%' then 'invalid' else 'valid' end) = 'valid'\n  set @page_size = convert(int,ltrim(rtrim('$page_size')));\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @start_time_utc = $__timeFrom();\n--set @start_time_utc = dateadd(second,$sqlserver_start_time_utc/1000,'1970-01-01 00:00:00');\nset @end_time_utc = $__timeTo();\n--set @end_time_utc = $__timeFrom();\n--set @delta_minutes = $cpu_delta_minutes;\nset @params = N'@perfmon_host_name varchar(255), @start_time_utc datetime2, @end_time_utc datetime2,\n\t\t\t\t@program_name nvarchar(500), @login_name nvarchar(255), @database nvarchar(500),\n\t\t\t\t@session_id int, @session_host_name nvarchar(125), @query_pattern nvarchar(500),\n\t\t\t\t@duration int, @page_no int, @page_size int';\n\nset quoted_identifier off;\nset @sql = \"\nset nocount on;\n\n;with cte_sessions as (\n  select [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), w.collection_time), w.session_id, \n  \t\tw.program_name, w.login_name, w.database_name, w.host_name, w.granted_memory, w.tempdb_current,\n  \t\tw.status, w.CPU, w.used_memory, w.open_tran_count, [duration_s] = datediff(SECOND, start_time, w.collection_time),\n  \t\tsql_command = case when w.sql_command is not null then left(replace(replace(convert(nvarchar(max),w.sql_command),char(13)+char(10),''),'<?query --',''),150)\n  \t\t\t\t\t\t\telse left(replace(replace(convert(nvarchar(max),w.sql_text),char(13)+char(10),''),'<?query --',''),150) end, \n  \t\tw.blocked_session_count, w.wait_info, w.blocking_session_id, w.reads, w.writes, w.tempdb_allocations,\n  \t\tw.tasks, w.percent_complete, start_time = convert(varchar,w.start_time,120)\n  from $whoisactive_table_name w with (nolock)\n  where w.collection_time between DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc) and DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and datediff(minute,start_time,collection_time) >= @duration\n\torder by w.collection_time\n\toffset ((@page_no-1)*@page_size) rows fetch next @page_size rows only\n)\nselect [collection_time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [collection_time]), w.session_id,\n          [ddd hh:mm:ss] = right('0000'+convert(varchar, duration_s/86400),3)+ ' '+convert(varchar,dateadd(SECOND,duration_s,'1900-01-01 00:00:00'),108), \n          w.program_name, w.login_name, w.database_name, w.host_name, w.status, w.CPU, \n          granted_memory_kb = (w.granted_memory * 8.0), w.open_tran_count, w.wait_info, w.sql_command, w.blocked_session_count, \n          w.blocking_session_id, [reads_kb] = (w.[reads]*8.0), w.writes, [tempdb_allocations_kb] = (w.tempdb_allocations*8.0), \n          tempdb_current_kb = (tempdb_current*8.0), w.tasks, w.percent_complete, [used_memory_kb] = (w.used_memory*8.0),\n          start_time = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), [start_time])\nfrom cte_sessions w\nwhere 1 = 1\n\"\n\nif @program_name is not null\n\tset @sql = @sql + @crlf + \"and w.program_name like ('%'+@program_name+'%')\"\nif @database is not null\n\tset @sql = @sql + @crlf + \"and w.database_name like ('%'+@database+'%')\"\nif @login_name is not null\n\tset @sql = @sql + @crlf + \"and w.login_name like ('%'+@login_name+'%')\"\nif @session_host_name is not null\n\tset @sql = @sql + @crlf + \"and w.host_name like ('%'+@session_host_name+'%')\"\nif @query_pattern is not null\n\tset @sql = @sql + @crlf + \"and w.sql_command like ('%'+@query_pattern+'%')\"\nif @session_id is not null\n\tset @sql = @sql + @crlf + \"and w.session_id = @session_id\"\nset @sql = @sql + @crlf + \"order by w.collection_time DESC, w.start_time ASC\";\n\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc, \n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration, @page_no, @page_size;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql, @params, @perfmon_host_name, @start_time_utc, @end_time_utc,\n\t\t\t\t\t@program_name, @login_name, @database, @session_id, @session_host_name, \n\t\t\t\t\t@query_pattern, @duration, @page_no, @page_size;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "WhoIsActive Data - Captured - Paginated - Page No {$page_no} - Page Size {$page_size} - Between - ___${__from:date:YYYY-MM-DD HH.mm}___&___${whoisactive_collection_time_utc:date:YYYY-MM-DD HH.mm}___",
          "type": "table"
        }
      ],
      "title": "What was Running - [sp_WhoIsActive] - For Duration - Paginated - Page No {$page_no} - Page Size {$page_size}",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "mssql",
        "uid": "5Qr_lHw7z"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 121,
      "panels": [
        {
          "description": "",
          "gridPos": {
            "h": 14,
            "w": 24,
            "x": 0,
            "y": 10
          },
          "id": 119,
          "links": [],
          "options": {
            "folderId": 1,
            "maxItems": 50,
            "query": "",
            "showHeadings": false,
            "showRecentlyViewed": false,
            "showSearch": true,
            "showStarred": false,
            "tags": []
          },
          "pluginVersion": "9.3.2",
          "title": "Other Dashboards",
          "type": "dashlist"
        }
      ],
      "repeat": "datasource",
      "targets": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "5Qr_lHw7z"
          },
          "refId": "A"
        }
      ],
      "title": "Other Dashboards",
      "type": "row"
    }
  ],
  "refresh": "2m",
  "revision": 1,
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "mssql",
    "sqlmonitor",
    "sp_WhoIsActive"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "SqlServer",
          "value": "ygPVA4snk"
        },
        "description": "Inventory Server Name",
        "hide": 2,
        "includeAll": false,
        "label": "Data Source",
        "multi": false,
        "name": "sqlmonitor_datasource",
        "options": [],
        "query": "mssql",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": "21L-LTPABL-1187",
          "value": "21L-LTPABL-1187"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1 and is_enabled = 1",
        "hide": 0,
        "includeAll": false,
        "label": "Sql Instance",
        "multi": false,
        "name": "server",
        "options": [],
        "query": "select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1 and is_enabled = 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "hide": 0,
        "label": "Session ID",
        "name": "session_id",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "__All__",
          "value": "__All__"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select name from sys.databases d where d.state_desc = 'ONLINE' union all select '__All__' as name order by name;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "hide": 0,
        "includeAll": false,
        "label": "Database",
        "multi": false,
        "name": "database",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @sql_instance varchar(255);\ndeclare @perfmon_host_name varchar(255);\n\nset @sql_instance = '$server';\n--set @perfmon_host_name = '$perfmon_host_name';\nset @params = N'@perfmon_host_name varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"select name from sys.databases d where d.state_desc = 'ONLINE' union all select '__All__' as name order by name;\"\nset quoted_identifier on;\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql , @params, @perfmon_host_name;\nelse\n  exec [$server].[$dba_db].dbo.sp_executesql @sql , @params, @perfmon_host_name;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 5,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "DBA",
          "value": "DBA"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "SELECT DB_NAME() as [db_name]",
        "hide": 2,
        "includeAll": false,
        "label": "Inventory Database",
        "multi": false,
        "name": "inventory_db",
        "options": [],
        "query": "SELECT DB_NAME() as [db_name]",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "declare @sql_instance varchar(255); \nset @sql_instance = '$server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "hide": 2,
        "includeAll": false,
        "label": "Is Local SQL Instance",
        "multi": false,
        "name": "is_local",
        "options": [],
        "query": "declare @sql_instance varchar(255); \nset @sql_instance = '$server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "1",
          "value": "1"
        },
        "description": "Threshold duration in minutes for Long Running Queries",
        "hide": 0,
        "includeAll": false,
        "label": "Duration (Min)",
        "multi": false,
        "name": "duration",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          },
          {
            "selected": true,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "2",
            "value": "2"
          },
          {
            "selected": false,
            "text": "5",
            "value": "5"
          },
          {
            "selected": false,
            "text": "10",
            "value": "10"
          },
          {
            "selected": false,
            "text": "15",
            "value": "15"
          },
          {
            "selected": false,
            "text": "20",
            "value": "20"
          },
          {
            "selected": false,
            "text": "30",
            "value": "30"
          },
          {
            "selected": false,
            "text": "45",
            "value": "45"
          },
          {
            "selected": false,
            "text": "60",
            "value": "60"
          },
          {
            "selected": false,
            "text": "90",
            "value": "90"
          },
          {
            "selected": false,
            "text": "120",
            "value": "120"
          },
          {
            "selected": false,
            "text": "180",
            "value": "180"
          },
          {
            "selected": false,
            "text": "260",
            "value": "260"
          },
          {
            "selected": false,
            "text": "300",
            "value": "300"
          },
          {
            "selected": false,
            "text": "480",
            "value": "480"
          }
        ],
        "query": "0,1,2,5,10,15,20,30,45,60,90,120,180,260,300,480",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "100.64.0.1",
          "value": "100.64.0.1"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect CONVERT(varchar,  CONNECTIONPROPERTY('local_net_address') ) as [ip]\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "description": "IP Address of Sql Instance",
        "hide": 2,
        "includeAll": false,
        "label": "IP Address",
        "multi": false,
        "name": "ip",
        "options": [],
        "query": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect CONVERT(varchar,  CONNECTIONPROPERTY('local_net_address') ) as [ip]\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "21L-LTPABL-1187",
          "value": "21L-LTPABL-1187"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect CONVERT(varchar,SERVERPROPERTY('ComputerNamePhysicalNetBIOS')) as [host_name]\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "hide": 2,
        "includeAll": false,
        "label": "Host Name",
        "multi": false,
        "name": "host_name",
        "options": [],
        "query": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect CONVERT(varchar,SERVERPROPERTY('ComputerNamePhysicalNetBIOS')) as [host_name]\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "WORKGROUP",
          "value": "WORKGROUP"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "exec dbo.usp_GetAllServerInfo \n\t\t\t\t@servers = '$server',\n\t\t\t\t@output = 'fqdn'",
        "hide": 2,
        "includeAll": false,
        "label": "Fully Qualified Domain Name",
        "multi": false,
        "name": "fqdn",
        "options": [],
        "query": "exec dbo.usp_GetAllServerInfo \n\t\t\t\t@servers = '$server',\n\t\t\t\t@output = 'fqdn'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1704945533165",
          "value": "1704945533165"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect top 1 collection_time_utc\nfrom [$inventory_db].dbo.vw_performance_counters\nwhere host_name = '$host_name'\norder by collection_time_utc desc\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "hide": 2,
        "includeAll": false,
        "label": "Collection Time UTC",
        "multi": false,
        "name": "collection_time_utc",
        "options": [],
        "query": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect top 1 collection_time_utc\nfrom [$inventory_db].dbo.vw_performance_counters\nwhere host_name = '$host_name'\norder by collection_time_utc desc\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "label": "WhoIsActive Table Name",
        "name": "whoisactive_table_name",
        "query": "dbo.WhoIsActive",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "current": {
          "selected": false,
          "text": "1704945607043",
          "value": "1704945607043"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect top 1 DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), collection_time )\nfrom [$dba_db].$whoisactive_table_name\norder by collection_time desc\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "hide": 2,
        "includeAll": false,
        "label": "WhoIsActive Collection Time UTC",
        "multi": false,
        "name": "whoisactive_collection_time_utc",
        "options": [],
        "query": "SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET QUOTED_IDENTIFIER OFF\nDECLARE @sql varchar(max) = \"\nselect top 1 DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), collection_time )\nfrom [$dba_db].$whoisactive_table_name\norder by collection_time desc\n\"\nSET QUOTED_IDENTIFIER ON\n\n--IF ('$server' = SERVERPROPERTY('ServerName'))\nif ($is_local = 1)\n  EXEC (@sql);\nELSE\n  EXEC (@sql) AT [$server];",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "description": "program_name in sys.dm_exec_sessions",
        "hide": 0,
        "label": "Program",
        "name": "program_name",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "",
          "value": ""
        },
        "hide": 0,
        "label": "Login",
        "name": "login_name",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "hide": 0,
        "label": "Host Name",
        "name": "session_host_name",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "hide": 0,
        "label": "Query Pattern",
        "name": "query_pattern",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "DBA",
          "value": "DBA"
        },
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$server';\n\nset quoted_identifier off;\nset @sql = \"select top 1 [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "hide": 2,
        "includeAll": false,
        "label": "DBA Database",
        "multi": false,
        "name": "dba_db",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$server';\n\nset quoted_identifier off;\nset @sql = \"select top 1 [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "500",
          "value": "500"
        },
        "hide": 0,
        "includeAll": false,
        "label": "M/r Grant (MB)",
        "multi": false,
        "name": "memory_grant_threshold_mb",
        "options": [
          {
            "selected": true,
            "text": "500",
            "value": "500"
          },
          {
            "selected": false,
            "text": "2048",
            "value": "2048"
          },
          {
            "selected": false,
            "text": "5120",
            "value": "5120"
          },
          {
            "selected": false,
            "text": "10240",
            "value": "10240"
          },
          {
            "selected": false,
            "text": "20480",
            "value": "20480"
          }
        ],
        "query": "500, 2048, 5120, 10240, 20480",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "1",
          "value": "1"
        },
        "description": "Page No Used for Paginated Result",
        "hide": 0,
        "label": "Page No",
        "name": "page_no",
        "options": [
          {
            "selected": true,
            "text": "1",
            "value": "1"
          }
        ],
        "query": "1",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "200",
          "value": "200"
        },
        "description": "Page Size for Paginated Result",
        "hide": 0,
        "label": "Page Size",
        "name": "page_size",
        "options": [
          {
            "selected": true,
            "text": "200",
            "value": "200"
          }
        ],
        "query": "200",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-2h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "1m",
      "2m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "browser",
  "title": "WhoIsActive - SQL Server Queries - Workload",
  "uid": "WhoIsActive",
  "version": 8,
  "weekStart": ""
}