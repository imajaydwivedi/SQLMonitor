{
  "__inputs": [
    {
      "name": "DS_SQLMONITOR",
      "label": "SQLMonitor",
      "description": "",
      "type": "datasource",
      "pluginId": "mssql",
      "pluginName": "Microsoft SQL Server"
    },
    {
      "name": "VAR_MAX_SERVERS_TO_DISPLAY",
      "type": "constant",
      "label": "max_servers_to_display",
      "value": "10",
      "description": ""
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "dashlist",
      "name": "Dashboard list",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.3.1"
    },
    {
      "type": "datasource",
      "id": "mssql",
      "name": "Microsoft SQL Server",
      "version": "11.3.0"
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Display Workload Details Captured using Extended Events",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 156,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              },
              "unit": "bytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 10,
            "w": 24,
            "x": 0,
            "y": 1
          },
          "id": 155,
          "options": {
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "multi",
              "sort": "desc"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\ndeclare @disk_drive varchar(20);\ndeclare @database varchar(255);\ndeclare @daterange_weeks int = 0;\n\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\n\nset @servers = '${server:raw}';\n--set @sql_instance = '${first_server}'\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\nset @daterange_weeks = DATEDIFF(week,@start_time_utc,@end_time_utc);\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @trend_by varchar(20), @hour_of_day int, @disk_drive varchar(20), @database varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"/* Core Metrics - Trend */\nset nocount on;\t\t\t\n\ndeclare @start_time_local datetime2 = DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc);\ndeclare @end_time_local datetime2 = case when @trend_by = 'Hourly'\n\t\t\t\t\t\t\t\t\t\tthen DATEADD(HOUR,1,DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc))\n\t\t\t\t\t\t\t\t\t\telse cast(DATEADD(DAY,1,DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)) as date)\n\t\t\t\t\t\t\t\t\t\tend\n\nif OBJECT_ID('tempdb..#lower_samples') is not null\n\tdrop table #lower_samples;\n;with cte_time as (\n\tselect [start_date_local] = convert(datetime2,cast(@start_time_local as date)), [p_start_time_local] = @start_time_local, [p_end_time_local] = @end_time_local\n\t--\n\tunion all\n\t--\n\tselect\t[start_date_local] = case when @trend_by = 'Hourly' then dateadd(hour,1,cte.[start_date_local]) else dateadd(DAY,1,cte.[start_date_local]) end, \n\t\t\t[p_start_time_local], [p_end_time_local]\n\tfrom cte_time cte\n\twhere cte.[start_date_local] < [p_end_time_local]\n)\n,cte_time_window as (\n\tselect\tcte.[start_date_local], ed.end_date_local,\n\t\t\t[start_date_utc] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), cte.[start_date_local]),\n\t\t\t[end_date_utc] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), ed.end_date_local)\n\tfrom cte_time cte\n\touter apply (select end_date_local = case when @trend_by = 'Hourly' then dateadd(hour,1,cte.[start_date_local]) else dateadd(DAY,1,cte.[start_date_local]) end) ed\n\twhere 1=1\n\t\"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,cte.[start_date_local]) = @hour_of_day\n)\n,cte_fis_distinct_samples as (\n\tselect\tdistinct t.*, collection_time_utc, sample_ms\n\tfrom dbo.file_io_stats fis\n\tjoin cte_time_window t\n\t\ton fis.collection_time_utc >= t.start_date_utc and fis.collection_time_utc < t.end_date_utc\n)\n,cte_fis_samples_prev as (\n\tselect fis.*\n\t\t\t,prev_collection_time_utc = LAG(collection_time_utc) over ( partition by start_date_local order by collection_time_utc)\n\t\t\t,prev_sample_ms = LAG(sample_ms) over ( partition by start_date_local order by collection_time_utc)\n\tfrom cte_fis_distinct_samples fis\n)\n,cte_fis_snapshots as (\n\tselect\tfis.start_date_local, fis.end_date_local, fis.start_date_utc, fis.end_date_utc, \n\t\t\tbase_collection_time_utc = case when prev_collection_time_utc is null then fis.collection_time_utc\n\t\t\t\t\t\t\t\t\t\t\twhen sample_ms >= prev_sample_ms then null\n\t\t\t\t\t\t\t\t\t\t\twhen sample_ms < prev_sample_ms then fis.collection_time_utc\n\t\t\t\t\t\t\t\t\t\t\telse null\n\t\t\t\t\t\t\t\t\t\t\tend\n\tfrom cte_fis_samples_prev fis\n\twhere 1=1\n)\nselect /* Time Range = \"+cast(@daterange_weeks as varchar)+\" weeks */\tdatapoint_id = ROW_NUMBER()over(order by (select 'Ajay is Genious')),\n\t\t\t\tfis.*\n\t\t\t\t,next_collection_time_utc = LEAD(base_collection_time_utc) over (partition by start_date_local order by base_collection_time_utc)\ninto #lower_samples\nfrom cte_fis_snapshots fis\nwhere 1=1\nand fis.base_collection_time_utc is not null\nOPTION (MAXRECURSION 32767);\n\nselect /* Time Range = \"+cast(@daterange_weeks as varchar)+\" weeks */\t--ls.start_date_local, \n\t\t[time] = s1.collection_time_utc, [metric] = s1.database_name,\n\t\t--collection_time_utc__s2 = max(s2.collection_time_utc),\t\t\n\t\tio_bytes = case when max(s2.sample_ms) > max(s1.sample_ms)\n\t\t\t\t\t\tthen sum(s2.num_of_bytes_read+s2.num_of_bytes_written)-sum(s1.num_of_bytes_read+s1.num_of_bytes_written)\n\t\t\t\t\t\telse sum(s1.num_of_bytes_read+s1.num_of_bytes_written)\n\t\t\t\t\t\tend\nfrom #lower_samples ls\nouter apply (\n\t\tselect top 1 fisi.collection_time_utc\n\t\tfrom dbo.file_io_stats fisi\n\t\twhere fisi.collection_time_utc > (case when ls.next_collection_time_utc is null then ls.end_date_utc\n\t\t\t\t\t\t\t\t\t\t\t\telse dateadd(second,-2,next_collection_time_utc) end)\n\t\torder by fisi.collection_time_utc\n\t) fisi\njoin dbo.file_io_stats s1\n\ton s1.collection_time_utc = ls.base_collection_time_utc\njoin dbo.file_io_stats s2\n\ton s2.collection_time_utc = fisi.collection_time_utc\n\tand s2.database_name = s1.database_name\n\tand s2.file_id = s1.file_id\ngroup by ls.start_date_local, s1.collection_time_utc, s1.database_name\norder by time, metric, io_bytes desc\n\"\nset quoted_identifier on;\n--print @sql\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @trend_by, @hour_of_day, @disk_drive, @database;\nelse\n  exec [$first_server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @trend_by, @hour_of_day, @disk_drive, @database;\n",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - Database IO - Server ___[${first_server}]___",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 11
          },
          "id": 157,
          "options": {
            "legend": {
              "calcs": [
                "max"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\ndeclare @disk_drive varchar(20);\ndeclare @database varchar(255);\ndeclare @daterange_weeks int = 0;\n\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\n\nset @servers = '${server:raw}';\n--set @sql_instance = '${first_server}'\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\nset @daterange_weeks = DATEDIFF(week,@start_time_utc,@end_time_utc);\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @trend_by varchar(20), @hour_of_day int, @disk_drive varchar(20), @database varchar(255)';\n\nset quoted_identifier off;\nset @sql = \"/* Core Metrics - Trend */\nset nocount on;\t\t\t\n\ndeclare @start_time_local datetime2 = DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc);\ndeclare @end_time_local datetime2 = case when @trend_by = 'Hourly'\n\t\t\t\t\t\t\t\t\t\tthen DATEADD(HOUR,1,DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc))\n\t\t\t\t\t\t\t\t\t\telse cast(DATEADD(DAY,1,DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)) as date)\n\t\t\t\t\t\t\t\t\t\tend\n\nif OBJECT_ID('tempdb..#lower_samples') is not null\n\tdrop table #lower_samples;\n;with cte_time as (\n\tselect [start_date_local] = convert(datetime2,cast(@start_time_local as date)), [p_start_time_local] = @start_time_local, [p_end_time_local] = @end_time_local\n\t--\n\tunion all\n\t--\n\tselect\t[start_date_local] = case when @trend_by = 'Hourly' then dateadd(hour,1,cte.[start_date_local]) else dateadd(DAY,1,cte.[start_date_local]) end, \n\t\t\t[p_start_time_local], [p_end_time_local]\n\tfrom cte_time cte\n\twhere cte.[start_date_local] < [p_end_time_local]\n)\n,cte_time_window as (\n\tselect\tcte.[start_date_local], ed.end_date_local,\n\t\t\t[start_date_utc] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), cte.[start_date_local]),\n\t\t\t[end_date_utc] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), ed.end_date_local)\n\tfrom cte_time cte\n\touter apply (select end_date_local = case when @trend_by = 'Hourly' then dateadd(hour,1,cte.[start_date_local]) else dateadd(DAY,1,cte.[start_date_local]) end) ed\n\twhere 1=1\n\t\"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,cte.[start_date_local]) = @hour_of_day\n)\n,cte_fis_distinct_samples as (\n\tselect\tdistinct t.*, collection_time_utc, sample_ms\n\tfrom dbo.file_io_stats fis\n\tjoin cte_time_window t\n\t\ton fis.collection_time_utc >= t.start_date_utc and fis.collection_time_utc < t.end_date_utc\n)\n,cte_fis_samples_prev as (\n\tselect fis.*\n\t\t\t,prev_collection_time_utc = LAG(collection_time_utc) over ( partition by start_date_local order by collection_time_utc)\n\t\t\t,prev_sample_ms = LAG(sample_ms) over ( partition by start_date_local order by collection_time_utc)\n\tfrom cte_fis_distinct_samples fis\n)\n,cte_fis_snapshots as (\n\tselect\tfis.start_date_local, fis.end_date_local, fis.start_date_utc, fis.end_date_utc, \n\t\t\tbase_collection_time_utc = case when prev_collection_time_utc is null then fis.collection_time_utc\n\t\t\t\t\t\t\t\t\t\t\twhen sample_ms >= prev_sample_ms then null\n\t\t\t\t\t\t\t\t\t\t\twhen sample_ms < prev_sample_ms then fis.collection_time_utc\n\t\t\t\t\t\t\t\t\t\t\telse null\n\t\t\t\t\t\t\t\t\t\t\tend\n\tfrom cte_fis_samples_prev fis\n\twhere 1=1\n)\nselect /* Time Range = \"+cast(@daterange_weeks as varchar)+\" weeks */\tdatapoint_id = ROW_NUMBER()over(order by (select 'Ajay is Genious')),\n\t\t\t\tfis.*\n\t\t\t\t,next_collection_time_utc = LEAD(base_collection_time_utc) over (partition by start_date_local order by base_collection_time_utc)\ninto #lower_samples\nfrom cte_fis_snapshots fis\nwhere 1=1\nand fis.base_collection_time_utc is not null\nOPTION (MAXRECURSION 32767);\n\nselect /* Time Range = \"+cast(@daterange_weeks as varchar)+\" weeks */\t--ls.start_date_local, \n\t\t[time] = s1.collection_time_utc, [metric] = s1.database_name,\n\t\t--collection_time_utc__s2 = max(s2.collection_time_utc),\t\t\n\t\tiops = abs(case when max(s2.sample_ms) > max(s1.sample_ms)\n\t\t\t\t\t\tthen (sum(s2.num_of_reads+s2.num_of_writes)-sum(s1.num_of_reads+s1.num_of_writes)) / ((max(s2.sample_ms)-max(s1.sample_ms))/1000)\n\t\t\t\t\t\telse 0\n\t\t\t\t\t\tend)\nfrom #lower_samples ls\nouter apply (\n\t\tselect top 1 fisi.collection_time_utc\n\t\tfrom dbo.file_io_stats fisi\n\t\twhere fisi.collection_time_utc > (case when ls.next_collection_time_utc is null then ls.end_date_utc\n\t\t\t\t\t\t\t\t\t\t\t\telse dateadd(second,-2,next_collection_time_utc) end)\n\t\torder by fisi.collection_time_utc\n\t) fisi\njoin dbo.file_io_stats s1\n\ton s1.collection_time_utc = ls.base_collection_time_utc\njoin dbo.file_io_stats s2\n\ton s2.collection_time_utc = fisi.collection_time_utc\n\tand s2.database_name = s1.database_name\n\tand s2.file_id = s1.file_id\ngroup by ls.start_date_local, s1.collection_time_utc, s1.database_name\norder by time, metric, iops desc\n\"\nset quoted_identifier on;\n--print @sql\n\n\n--if (@sql_instance = SERVERPROPERTY('SERVERNAME'))\nif ($is_local = 1)\n  exec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @trend_by, @hour_of_day, @disk_drive, @database;\nelse\n  exec [$first_server].[$dba_db].dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @trend_by, @hour_of_day, @disk_drive, @database;\n",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - Database IOPS - Server ___[${first_server}]___",
          "type": "timeseries"
        }
      ],
      "title": "Core Metrics - ${trend_by} TREND - Database IO - Server ___[${first_server}]___",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 145,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 229
          },
          "id": 143,
          "options": {
            "legend": {
              "calcs": [
                "p99"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\ndeclare @max_servers_to_display int = $max_servers_to_display;\ndeclare @parameter_servers_count int = 1;\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\ndeclare @vih_hourly_collection_time datetime2 = '${vih_hourly_collection_time:date:iso}';\ndeclare @group_by_sql varchar(500) = '';\ndeclare @group_by_metric varchar(500);\n\nset @servers = '${server:raw}';\nset @parameter_servers_count = len(@servers)-len(replace(@servers,',','')) + 1;\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @hour_of_day int, @servers varchar(8000), @max_servers_to_display int, @vih_hourly_collection_time datetime2';\n\n\nset quoted_identifier off;\nset @sql = \"/* $__dashboard */\nset nocount on;\t\t\t\n\n;with t_history_hourly as \n(\n  select  distinct\n          [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'hh.collection_time' \n                      end)+\"),\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name, \n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"hh.os_cpu__p993\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"hh.os_cpu__p99\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"hh.os_cpu__p98\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"hh.os_cpu__p95\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"hh.os_cpu__p50\n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"*/\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"os_cpu__p993 = PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY hh.os_cpu__p993) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"os_cpu__p99 = PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY hh.os_cpu__p99) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"os_cpu__p98 = PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY hh.os_cpu__p98) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"os_cpu__p95 = PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY hh.os_cpu__p95) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"os_cpu__p50 = PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY hh.os_cpu__p50) OVER (PARTITION BY cast(collection_time as date), srv_name)\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"*/\n  from dbo.all_server_volatile_info_history_hourly hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n),\nt_history_regular as (\n  select  [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'dateadd(hour,DATEPART(hour,hh.collection_time),cast(convert(date,hh.collection_time) as datetime))'\n                      end)+\"),\n          hh.srv_name, \n          hh.os_cpu\n  from dbo.all_server_volatile_info_history hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and hh.collection_time > @vih_hourly_collection_time\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n)\n,t_history_regular_to_trendby as (\n  select distinct \n          [time],\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name,\n          \"+(case when @percentile = 'p50' then '' else '--' end)+\"os_cpu__p50 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY os_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p95' then '' else '--' end)+\"os_cpu__p95 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY os_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p98' then '' else '--' end)+\"os_cpu__p98 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY os_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p99' then '' else '--' end)+\"os_cpu__p99 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY os_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p993' then '' else '--' end)+\"os_cpu__p993 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY os_cpu) OVER (PARTITION BY [time], srv_name))\n\n  from t_history_regular hh\n  where 1=1\n)\n,t_history as (\n  select * from t_history_hourly\n  union all\n  select * from t_history_regular_to_trendby\n)\nselect *\nfrom t_history\norder by [time]\n\"\nset quoted_identifier on;\nprint @sql\n\nexec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @hour_of_day, @servers, @max_servers_to_display, @vih_hourly_collection_time;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - OS CPU",
          "type": "timeseries"
        },
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 269
          },
          "id": 146,
          "options": {
            "legend": {
              "calcs": [
                "mean"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\ndeclare @max_servers_to_display int = $max_servers_to_display;\ndeclare @parameter_servers_count int = 1;\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\ndeclare @vih_hourly_collection_time datetime2 = '${vih_hourly_collection_time:date:iso}';\ndeclare @group_by_sql varchar(500) = '';\ndeclare @group_by_metric varchar(500);\n\nset @servers = '${server:raw}';\nset @parameter_servers_count = len(@servers)-len(replace(@servers,',','')) + 1;\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @hour_of_day int, @servers varchar(8000), @max_servers_to_display int, @vih_hourly_collection_time datetime2';\n\n\nset quoted_identifier off;\nset @sql = \"/* $__dashboard */\nset nocount on;\t\t\t\n\n;with t_history_hourly as \n(\n  select  distinct\n          [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'hh.collection_time' \n                      end)+\"),\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name, \n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"hh.sql_cpu__p993\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"hh.sql_cpu__p99\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"hh.sql_cpu__p98\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"hh.sql_cpu__p95\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"hh.sql_cpu__p50\n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"*/\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"sql_cpu__p993 = PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY hh.sql_cpu__p993) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"sql_cpu__p99 = PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY hh.sql_cpu__p99) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"sql_cpu__p98 = PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY hh.sql_cpu__p98) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"sql_cpu__p95 = PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY hh.sql_cpu__p95) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"sql_cpu__p50 = PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY hh.sql_cpu__p50) OVER (PARTITION BY cast(collection_time as date), srv_name)\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"*/\n  from dbo.all_server_volatile_info_history_hourly hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n),\nt_history_regular as (\n  select  [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'dateadd(hour,DATEPART(hour,hh.collection_time),cast(convert(date,hh.collection_time) as datetime))'\n                      end)+\"),\n          hh.srv_name, \n          hh.sql_cpu\n  from dbo.all_server_volatile_info_history hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and hh.collection_time > @vih_hourly_collection_time\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n)\n,t_history_regular_to_trendby as (\n  select distinct \n          [time],\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name,\n          \"+(case when @percentile = 'p50' then '' else '--' end)+\"sql_cpu__p50 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY sql_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p95' then '' else '--' end)+\"sql_cpu__p95 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY sql_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p98' then '' else '--' end)+\"sql_cpu__p98 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY sql_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p99' then '' else '--' end)+\"sql_cpu__p99 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY sql_cpu) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p993' then '' else '--' end)+\"sql_cpu__p993 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY sql_cpu) OVER (PARTITION BY [time], srv_name))\n\n  from t_history_regular hh\n  where 1=1\n)\n,t_history as (\n  select * from t_history_hourly\n  union all\n  select * from t_history_regular_to_trendby\n)\nselect *\nfrom t_history\norder by [time]\n\"\nset quoted_identifier on;\nprint @sql\n\nexec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @hour_of_day, @servers, @max_servers_to_display, @vih_hourly_collection_time;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - SQL CPU",
          "type": "timeseries"
        }
      ],
      "title": "Core Metrics - ${trend_by} TREND - CPU - Max {$max_servers_to_display} Servers",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 148,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "ms"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 230
          },
          "id": 147,
          "options": {
            "legend": {
              "calcs": [
                "p99"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\ndeclare @max_servers_to_display int = $max_servers_to_display;\ndeclare @parameter_servers_count int = 1;\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\ndeclare @vih_hourly_collection_time datetime2 = '${vih_hourly_collection_time:date:iso}';\ndeclare @group_by_sql varchar(500) = '';\ndeclare @group_by_metric varchar(500);\n\nset @servers = '${server:raw}';\nset @parameter_servers_count = len(@servers)-len(replace(@servers,',','')) + 1;\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @hour_of_day int, @servers varchar(8000), @max_servers_to_display int, @vih_hourly_collection_time datetime2';\n\n\nset quoted_identifier off;\nset @sql = \"/* $__dashboard */\nset nocount on;\t\t\t\n\n;with t_history_hourly as \n(\n  select  distinct\n          [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'hh.collection_time' \n                      end)+\"),\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name, \n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"hh.avg_disk_latency_ms__p993\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"hh.avg_disk_latency_ms__p99\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"hh.avg_disk_latency_ms__p98\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"hh.avg_disk_latency_ms__p95\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"hh.avg_disk_latency_ms__p50\n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"*/\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"avg_disk_latency_ms__p993 = PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY hh.avg_disk_latency_ms__p993) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"avg_disk_latency_ms__p99 = PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY hh.avg_disk_latency_ms__p99) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"avg_disk_latency_ms__p98 = PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY hh.avg_disk_latency_ms__p98) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"avg_disk_latency_ms__p95 = PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY hh.avg_disk_latency_ms__p95) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"avg_disk_latency_ms__p50 = PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY hh.avg_disk_latency_ms__p50) OVER (PARTITION BY cast(collection_time as date), srv_name)\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"*/\n  from dbo.all_server_volatile_info_history_hourly hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n),\nt_history_regular as (\n  select  [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'dateadd(hour,DATEPART(hour,hh.collection_time),cast(convert(date,hh.collection_time) as datetime))'\n                      end)+\"),\n          hh.srv_name, \n          hh.avg_disk_latency_ms\n  from dbo.all_server_volatile_info_history hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and hh.collection_time > @vih_hourly_collection_time\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n)\n,t_history_regular_to_trendby as (\n  select distinct \n          [time],\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name,\n          \"+(case when @percentile = 'p50' then '' else '--' end)+\"avg_disk_latency_ms__p50 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY avg_disk_latency_ms) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p95' then '' else '--' end)+\"avg_disk_latency_ms__p95 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY avg_disk_latency_ms) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p98' then '' else '--' end)+\"avg_disk_latency_ms__p98 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY avg_disk_latency_ms) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p99' then '' else '--' end)+\"avg_disk_latency_ms__p99 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY avg_disk_latency_ms) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p993' then '' else '--' end)+\"avg_disk_latency_ms__p993 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY avg_disk_latency_ms) OVER (PARTITION BY [time], srv_name))\n\n  from t_history_regular hh\n  where 1=1\n)\n,t_history as (\n  select * from t_history_hourly\n  union all\n  select * from t_history_regular_to_trendby\n)\nselect *\nfrom t_history\norder by [time]\n\"\nset quoted_identifier on;\nprint @sql\n\nexec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @hour_of_day, @servers, @max_servers_to_display, @vih_hourly_collection_time;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - Disk Latency",
          "type": "timeseries"
        }
      ],
      "title": "Core Metrics - ${trend_by} TREND - Disk Latency - Max {$max_servers_to_display} Servers",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 152,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green"
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 279
          },
          "id": 151,
          "options": {
            "legend": {
              "calcs": [
                "p99"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.1.4",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\ndeclare @max_servers_to_display int = $max_servers_to_display;\ndeclare @parameter_servers_count int = 1;\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\ndeclare @vih_hourly_collection_time datetime2 = '${vih_hourly_collection_time:date:iso}';\ndeclare @group_by_sql varchar(500) = '';\ndeclare @group_by_metric varchar(500);\n\nset @servers = '${server:raw}';\nset @parameter_servers_count = len(@servers)-len(replace(@servers,',','')) + 1;\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @hour_of_day int, @servers varchar(8000), @max_servers_to_display int, @vih_hourly_collection_time datetime2';\n\n\nset quoted_identifier off;\nset @sql = \"/* $__dashboard */\nset nocount on;\t\t\t\n\n;with t_history_hourly as \n(\n  select  distinct\n          [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'hh.collection_time' \n                      end)+\"),\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name, \n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"hh.active_requests_count__p993\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"hh.active_requests_count__p99\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"hh.active_requests_count__p98\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"hh.active_requests_count__p95\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"hh.active_requests_count__p50\n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"*/\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"active_requests_count__p993 = PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY hh.active_requests_count__p993) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"active_requests_count__p99 = PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY hh.active_requests_count__p99) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"active_requests_count__p98 = PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY hh.active_requests_count__p98) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"active_requests_count__p95 = PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY hh.active_requests_count__p95) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"active_requests_count__p50 = PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY hh.active_requests_count__p50) OVER (PARTITION BY cast(collection_time as date), srv_name)\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"*/\n  from dbo.all_server_volatile_info_history_hourly hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n),\nt_history_regular as (\n  select  [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'dateadd(hour,DATEPART(hour,hh.collection_time),cast(convert(date,hh.collection_time) as datetime))'\n                      end)+\"),\n          hh.srv_name, \n          hh.active_requests_count\n  from dbo.all_server_volatile_info_history hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and hh.collection_time > @vih_hourly_collection_time\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n)\n,t_history_regular_to_trendby as (\n  select distinct \n          [time],\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name,\n          \"+(case when @percentile = 'p50' then '' else '--' end)+\"active_requests_count__p50 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY active_requests_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p95' then '' else '--' end)+\"active_requests_count__p95 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY active_requests_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p98' then '' else '--' end)+\"active_requests_count__p98 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY active_requests_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p99' then '' else '--' end)+\"active_requests_count__p99 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY active_requests_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p993' then '' else '--' end)+\"active_requests_count__p993 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY active_requests_count) OVER (PARTITION BY [time], srv_name))\n\n  from t_history_regular hh\n  where 1=1\n)\n,t_history as (\n  select * from t_history_hourly\n  union all\n  select * from t_history_regular_to_trendby\n)\nselect *\nfrom t_history\norder by [time]\n\"\nset quoted_identifier on;\nprint @sql\n\nexec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @hour_of_day, @servers, @max_servers_to_display, @vih_hourly_collection_time;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - Requests",
          "type": "timeseries"
        }
      ],
      "title": "Core Metrics - ${trend_by} TREND - Requests - Max {$max_servers_to_display} Servers",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 154,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "kbytes"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 232
          },
          "id": 153,
          "options": {
            "legend": {
              "calcs": [
                "p99"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\ndeclare @max_servers_to_display int = $max_servers_to_display;\ndeclare @parameter_servers_count int = 1;\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\ndeclare @vih_hourly_collection_time datetime2 = '${vih_hourly_collection_time:date:iso}';\ndeclare @group_by_sql varchar(500) = '';\ndeclare @group_by_metric varchar(500);\n\nset @servers = '${server:raw}';\nset @parameter_servers_count = len(@servers)-len(replace(@servers,',','')) + 1;\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @hour_of_day int, @servers varchar(8000), @max_servers_to_display int, @vih_hourly_collection_time datetime2';\n\n\nset quoted_identifier off;\nset @sql = \"/* $__dashboard */\nset nocount on;\t\t\t\n\n;with t_history_hourly as \n(\n  select  distinct\n          [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'hh.collection_time' \n                      end)+\"),\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name, \n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"hh.available_physical_memory_kb__p993\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"hh.available_physical_memory_kb__p99\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"hh.available_physical_memory_kb__p98\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"hh.available_physical_memory_kb__p95\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"hh.available_physical_memory_kb__p50\n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"*/\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"available_physical_memory_kb__p993 = PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY hh.available_physical_memory_kb__p993 desc) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"available_physical_memory_kb__p99 = PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY hh.available_physical_memory_kb__p99 desc) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"available_physical_memory_kb__p98 = PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY hh.available_physical_memory_kb__p98 desc) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"available_physical_memory_kb__p95 = PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY hh.available_physical_memory_kb__p95 desc) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"available_physical_memory_kb__p50 = PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY hh.available_physical_memory_kb__p50 desc) OVER (PARTITION BY cast(collection_time as date), srv_name)\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"*/\n  from dbo.all_server_volatile_info_history_hourly hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n),\nt_history_regular as (\n  select  [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'dateadd(hour,DATEPART(hour,hh.collection_time),cast(convert(date,hh.collection_time) as datetime))'\n                      end)+\"),\n          hh.srv_name, \n          hh.available_physical_memory_kb\n  from dbo.all_server_volatile_info_history hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and hh.collection_time > @vih_hourly_collection_time\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n)\n,t_history_regular_to_trendby as (\n  select distinct \n          [time],\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name,\n          \"+(case when @percentile = 'p50' then '' else '--' end)+\"available_physical_memory_kb__p50 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY available_physical_memory_kb desc) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p95' then '' else '--' end)+\"available_physical_memory_kb__p95 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY available_physical_memory_kb desc) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p98' then '' else '--' end)+\"available_physical_memory_kb__p98 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY available_physical_memory_kb desc) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p99' then '' else '--' end)+\"available_physical_memory_kb__p99 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY available_physical_memory_kb desc) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p993' then '' else '--' end)+\"available_physical_memory_kb__p993 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY available_physical_memory_kb desc) OVER (PARTITION BY [time], srv_name))\n\n  from t_history_regular hh\n  where 1=1\n)\n,t_history as (\n  select * from t_history_hourly\n  union all\n  select * from t_history_regular_to_trendby\n)\nselect *\nfrom t_history\norder by [time]\n\"\nset quoted_identifier on;\nprint @sql\n\nexec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @hour_of_day, @servers, @max_servers_to_display, @vih_hourly_collection_time;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - Available Memory",
          "type": "timeseries"
        }
      ],
      "title": "Core Metrics - ${trend_by} TREND - Available Memory - Max {$max_servers_to_display} Servers",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 150,
      "panels": [
        {
          "datasource": {
            "type": "mssql",
            "uid": "${sqlmonitor_datasource}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "palette-classic"
              },
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "barWidthFactor": 0.6,
                "drawStyle": "line",
                "fillOpacity": 0,
                "gradientMode": "none",
                "hideFrom": {
                  "legend": false,
                  "tooltip": false,
                  "viz": false
                },
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {
                  "type": "linear"
                },
                "showPoints": "auto",
                "spanNulls": false,
                "stacking": {
                  "group": "A",
                  "mode": "none"
                },
                "thresholdsStyle": {
                  "mode": "off"
                }
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              },
              "unit": "none"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 24,
            "x": 0,
            "y": 234
          },
          "id": 149,
          "options": {
            "legend": {
              "calcs": [
                "p99"
              ],
              "displayMode": "list",
              "placement": "right",
              "showLegend": true
            },
            "tooltip": {
              "mode": "single",
              "sort": "none"
            }
          },
          "pluginVersion": "11.3.1",
          "targets": [
            {
              "datasource": {
                "type": "mssql",
                "uid": "${DS_SQLMONITOR}"
              },
              "editorMode": "code",
              "format": "time_series",
              "hide": false,
              "rawQuery": true,
              "rawSql": "declare @sql nvarchar(max);\ndeclare @params nvarchar(max);\ndeclare @servers varchar(8000);\ndeclare @start_time_utc datetime2;\ndeclare @end_time_utc datetime2;\ndeclare @crlf nchar(2) = nchar(13)+nchar(10);\n\ndeclare @max_servers_to_display int = $max_servers_to_display;\ndeclare @parameter_servers_count int = 1;\ndeclare @trend_by varchar(20) = '$trend_by'; -- Hourly,Daily\ndeclare @percentile varchar(20) = '$percentile';\ndeclare @hour_of_day int = ${hour_of_day};\ndeclare @vih_hourly_collection_time datetime2 = '${vih_hourly_collection_time:date:iso}';\ndeclare @group_by_sql varchar(500) = '';\ndeclare @group_by_metric varchar(500);\n\nset @servers = '${server:raw}';\nset @parameter_servers_count = len(@servers)-len(replace(@servers,',','')) + 1;\nset @start_time_utc = $__timeFrom();\nset @end_time_utc = $__timeTo();\n\n\nset @params = N'@start_time_utc datetime2, @end_time_utc datetime2, @hour_of_day int, @servers varchar(8000), @max_servers_to_display int, @vih_hourly_collection_time datetime2';\n\n\nset quoted_identifier off;\nset @sql = \"/* $__dashboard */\nset nocount on;\t\t\t\n\n;with t_history_hourly as \n(\n  select  distinct\n          [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'hh.collection_time' \n                      end)+\"),\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name, \n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"hh.connection_count__p993\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"hh.connection_count__p99\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"hh.connection_count__p98\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"hh.connection_count__p95\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"hh.connection_count__p50\n          \"+(case when @trend_by = 'Hourly' then '--' else '' end)+\"*/\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"/*\n            \"+(case when @percentile = 'p993' then '' else '--' end)+\"connection_count__p993 = PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY hh.connection_count__p993) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p99' then '' else '--' end)+\"connection_count__p99 = PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY hh.connection_count__p99) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p98' then '' else '--' end)+\"connection_count__p98 = PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY hh.connection_count__p98) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p95' then '' else '--' end)+\"connection_count__p95 = PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY hh.connection_count__p95) OVER (PARTITION BY cast(collection_time as date), srv_name)\n            \"+(case when @percentile = 'p50' then '' else '--' end)+\"connection_count__p50 = PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY hh.connection_count__p50) OVER (PARTITION BY cast(collection_time as date), srv_name)\n          \"+(case when @trend_by = 'Daily' then '--' else '' end)+\"*/\n  from dbo.all_server_volatile_info_history_hourly hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n),\nt_history_regular as (\n  select  [time] = DATEADD(mi, DATEDIFF(mi, getdate(), getutcdate()), \"+(case when @trend_by = 'Daily' \n                          then 'cast(convert(date,hh.collection_time) as datetime)' \n                          else 'dateadd(hour,DATEPART(hour,hh.collection_time),cast(convert(date,hh.collection_time) as datetime))'\n                      end)+\"),\n          hh.srv_name, \n          hh.connection_count\n  from dbo.all_server_volatile_info_history hh\n  where 1=1\n  and exists (select 1/0 from dbo.instance_details id where id.is_enabled = 1 and id.is_alias = 0 and id.sql_instance = hh.srv_name)\n  and hh.srv_name in (select ss.csv_substring from dbo.fn_split_string(@servers,',') ss where ss.srno <= @max_servers_to_display)\n  and hh.collection_time >= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @start_time_utc)\n  and hh.collection_time <= DATEADD(mi, DATEDIFF(mi, GETUTCDATE(), GETDATE()), @end_time_utc)\n  and hh.collection_time > @vih_hourly_collection_time\n  \"+(case when @trend_by = 'Hourly' then '' else '--' end)+\"and datepart(hour,collection_time) = @hour_of_day\n)\n,t_history_regular_to_trendby as (\n  select distinct \n          [time],\n          \"+(case when @parameter_servers_count = 1 then '--' else '' end)+\"hh.srv_name,\n          \"+(case when @percentile = 'p50' then '' else '--' end)+\"connection_count__p50 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(50*0.01) WITHIN GROUP (ORDER BY connection_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p95' then '' else '--' end)+\"connection_count__p95 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(95*0.01) WITHIN GROUP (ORDER BY connection_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p98' then '' else '--' end)+\"connection_count__p98 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(98*0.01) WITHIN GROUP (ORDER BY connection_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p99' then '' else '--' end)+\"connection_count__p99 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99*0.01) WITHIN GROUP (ORDER BY connection_count) OVER (PARTITION BY [time], srv_name))\n\t\t\t\t\t\"+(case when @percentile = 'p993' then '' else '--' end)+\"connection_count__p993 = CONVERT(NUMERIC(20,2),PERCENTILE_CONT(99.3*0.01) WITHIN GROUP (ORDER BY connection_count) OVER (PARTITION BY [time], srv_name))\n\n  from t_history_regular hh\n  where 1=1\n)\n,t_history as (\n  select * from t_history_hourly\n  union all\n  select * from t_history_regular_to_trendby\n)\nselect *\nfrom t_history\norder by [time]\n\"\nset quoted_identifier on;\nprint @sql\n\nexec dbo.sp_executesql @sql, @params, @start_time_utc, @end_time_utc, @hour_of_day, @servers, @max_servers_to_display, @vih_hourly_collection_time;",
              "refId": "A",
              "sql": {
                "columns": [
                  {
                    "parameters": [],
                    "type": "function"
                  }
                ],
                "groupBy": [
                  {
                    "property": {
                      "type": "string"
                    },
                    "type": "groupBy"
                  }
                ],
                "limit": 50
              }
            }
          ],
          "title": "Core Metrics - ${trend_by} TREND - Connections",
          "type": "timeseries"
        }
      ],
      "title": "Core Metrics - ${trend_by} TREND - Connections - Max {$max_servers_to_display} Servers",
      "type": "row"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 121,
      "panels": [
        {
          "description": "",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 20,
            "w": 24,
            "x": 0,
            "y": 312
          },
          "id": 119,
          "options": {
            "folderId": 1,
            "maxItems": 50,
            "query": "",
            "showHeadings": false,
            "showRecentlyViewed": false,
            "showSearch": true,
            "showStarred": false,
            "tags": []
          },
          "pluginVersion": "9.3.2",
          "title": "Other Dashboards",
          "type": "dashlist"
        }
      ],
      "repeat": "datasource",
      "title": "Other Dashboards",
      "type": "row"
    }
  ],
  "refresh": "30m",
  "schemaVersion": 40,
  "tags": [
    "mssql",
    "sqlmonitor",
    "core-metrics"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "description": "Inventory Server Name",
        "hide": 2,
        "includeAll": false,
        "label": "Data Source",
        "name": "sqlmonitor_datasource",
        "options": [],
        "query": "mssql",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1 and is_enabled = 1",
        "includeAll": true,
        "label": "Sql Instance",
        "multi": true,
        "name": "server",
        "options": [],
        "query": "select distinct srvname = sql_instance from dbo.instance_details with (nolock)\nwhere is_available = 1 and is_enabled = 1",
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "Daily",
          "value": "Daily"
        },
        "includeAll": false,
        "label": "Trend By",
        "name": "trend_by",
        "options": [
          {
            "selected": false,
            "text": "Hourly",
            "value": "Hourly"
          },
          {
            "selected": true,
            "text": "Daily",
            "value": "Daily"
          }
        ],
        "query": "Hourly,Daily",
        "type": "custom"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": ";with t_hours as (\n\tselect [hour] = 0\n\tunion all\n\tselect [hour] = u.hour+1\n\tfrom t_hours u\n\twhere u.hour < 23\n)\nselect [hour] from t_hours",
        "includeAll": false,
        "label": "Hour",
        "name": "hour_of_day",
        "options": [],
        "query": ";with t_hours as (\n\tselect [hour] = 0\n\tunion all\n\tselect [hour] = u.hour+1\n\tfrom t_hours u\n\twhere u.hour < 23\n)\nselect [hour] from t_hours",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "select coalesce(max(collection_time),getdate()-1)\nfrom dbo.all_server_volatile_info_history_hourly hh;",
        "description": "Latest Entry in dbo.all_server_volatile_info_history_hourly",
        "hide": 2,
        "includeAll": false,
        "label": "Lastest Date",
        "name": "vih_hourly_collection_time",
        "options": [],
        "query": "select coalesce(max(collection_time),getdate()-1)\nfrom dbo.all_server_volatile_info_history_hourly hh;",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "p993",
          "value": "p993"
        },
        "description": "",
        "hide": 1,
        "includeAll": false,
        "label": "Percentile",
        "name": "percentile",
        "options": [
          {
            "selected": true,
            "text": "p993",
            "value": "p993"
          },
          {
            "selected": false,
            "text": "p99",
            "value": "p99"
          },
          {
            "selected": false,
            "text": "p98",
            "value": "p98"
          },
          {
            "selected": false,
            "text": "p95",
            "value": "p95"
          },
          {
            "selected": false,
            "text": "p50",
            "value": "p50"
          }
        ],
        "query": "p993,p99,p98,p95,p50",
        "type": "custom"
      },
      {
        "hide": 2,
        "name": "max_servers_to_display",
        "query": "${VAR_MAX_SERVERS_TO_DISPLAY}",
        "skipUrlSync": true,
        "type": "constant",
        "current": {
          "value": "${VAR_MAX_SERVERS_TO_DISPLAY}",
          "text": "${VAR_MAX_SERVERS_TO_DISPLAY}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_MAX_SERVERS_TO_DISPLAY}",
            "text": "${VAR_MAX_SERVERS_TO_DISPLAY}",
            "selected": false
          }
        ]
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @server nvarchar(4000);\nset @server = '${server:csv}';\nselect --[@server] = @server, \n        first_server = case when charindex(',', @server) <= 0 then @server else left(@server,CHARINDEX(',',@server)-1) end;",
        "hide": 2,
        "label": "Top Server",
        "name": "first_server",
        "options": [],
        "query": "declare @server nvarchar(4000);\nset @server = '${server:csv}';\nselect --[@server] = @server, \n        first_server = case when charindex(',', @server) <= 0 then @server else left(@server,CHARINDEX(',',@server)-1) end;",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${sqlmonitor_datasource}"
        },
        "definition": "declare @sql_instance varchar(255); \nset @sql_instance = '$first_server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "description": "",
        "hide": 2,
        "label": "Is Local Instance",
        "name": "is_local",
        "options": [],
        "query": "declare @sql_instance varchar(255); \nset @sql_instance = '$first_server';\nselect is_local = case when ( (CONVERT(varchar,SERVERPROPERTY('MachineName')) = @sql_instance ) \n\t\t\tor (CONVERT(varchar,SERVERPROPERTY('ServerName')) = @sql_instance )\n\t\t\t)  then 1 else 0 end",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "mssql",
          "uid": "${DS_SQLMONITOR}"
        },
        "definition": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$first_server';\n\nset quoted_identifier off;\nset @sql = \"select top 1 [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "hide": 2,
        "name": "dba_db",
        "options": [],
        "query": "declare @sql nvarchar(max);\ndeclare @sql_instance varchar(255);\nset @sql_instance = '$first_server';\n\nset quoted_identifier off;\nset @sql = \"select top 1 [database] from dbo.instance_details id\nwhere id.sql_instance = @sql_instance\n\";\nset quoted_identifier off;\n\nexec dbo.sp_executesql @sql, N'@sql_instance varchar(255)', @sql_instance;",
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-15d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "1m",
      "2m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "browser",
  "title": "Core Metrics - Trend",
  "uid": "core_metrics_trend",
  "version": 23,
  "weekStart": ""
}